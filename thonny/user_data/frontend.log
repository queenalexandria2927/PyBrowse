18:05:03.819 [MainThread] INFO    thonny: Thonny version: 4.1.7
18:05:03.819 [MainThread] INFO    thonny: cwd: C:\Users\Alexandria Myers\Documents\GitHub\PyBrowse\thonny
18:05:03.819 [MainThread] INFO    thonny: original argv: []
18:05:03.819 [MainThread] INFO    thonny: sys.executable: C:\Users\Alexandria Myers\Documents\GitHub\PyBrowse\thonny\pythonw.exe
18:05:03.819 [MainThread] INFO    thonny: sys.argv: ['C:\\Users\\Alexandria Myers\\Documents\\GitHub\\PyBrowse\\thonny\\thonny.exe']
18:05:03.819 [MainThread] INFO    thonny: sys.path: ['C:\\Users\\Alexandria Myers\\Documents\\GitHub\\PyBrowse\\thonny\\python310.zip', 'C:\\Users\\Alexandria Myers\\Documents\\GitHub\\PyBrowse\\thonny\\DLLs', 'C:\\Users\\Alexandria Myers\\Documents\\GitHub\\PyBrowse\\thonny\\lib', 'C:\\Users\\Alexandria Myers\\Documents\\GitHub\\PyBrowse\\thonny', 'C:\\Users\\Alexandria Myers\\Documents\\GitHub\\PyBrowse\\thonny\\lib\\site-packages']
18:05:03.819 [MainThread] INFO    thonny: sys.flags: sys.flags(debug=0, inspect=0, interactive=0, optimize=0, dont_write_bytecode=0, no_user_site=1, no_site=0, ignore_environment=1, verbose=0, bytes_warning=0, quiet=0, hash_randomization=1, isolated=1, dev_mode=False, utf8_mode=0, warn_default_encoding=0, int_max_str_digits=-1)
18:05:03.849 [MainThread] INFO    thonny.workbench: Starting Workbench
18:05:03.904 [MainThread] INFO    thonny.workbench: Creating runner
18:05:03.905 [MainThread] INFO    thonny.workbench: Start loading plugins
18:05:03.942 [MainThread] INFO    thonny.workbench: Done loading plugins
18:05:03.981 [MainThread] INFO    thonny.workbench: Opening views
18:05:04.117 [MainThread] INFO    thonny.plugins.cpython_frontend.cp_front: Creating LocalCPythonProxy
18:05:04.117 [MainThread] INFO    thonny.running: Starting the backend: ['C:\\Users\\Alexandria Myers\\Documents\\GitHub\\PyBrowse\\thonny\\python.exe', '-u', '-B', 'C:\\Users\\Alexandria Myers\\Documents\\GitHub\\PyBrowse\\thonny\\lib\\site-packages\\thonny\\plugins\\cpython_backend\\cp_launcher.py', 'C:\\Users\\Alexandria Myers', "{'run.warn_module_shadowing': True}"] C:\Users\Alexandria Myers
18:05:13.280 [MainThread] INFO    thonny: TIME/MODS 9.464 Before Run (+195 modules)
18:05:13.280 [MainThread] INFO    thonny: NEW MODS ['_bisect', '_blake2', '_bz2', '_compression', '_ctypes', '_datetime', '_hashlib', '_heapq', '_json', '_lzma', '_queue', '_random', '_sha512', '_socket', '_ssl', '_struct', '_tkinter', '_uuid', 'base64', 'binascii', 'bisect', 'bz2', 'calendar', 'configparser', 'ctypes', 'ctypes._endian', 'ctypes.wintypes', 'datetime', 'email', 'email._encoded_words', 'email._parseaddr', 'email._policybase', 'email.base64mime', 'email.charset', 'email.encoders', 'email.errors', 'email.feedparser', 'email.header', 'email.iterators', 'email.message', 'email.parser', 'email.quoprimime', 'email.utils', 'encodings.ascii', 'errno', 'faulthandler', 'fnmatch', 'gettext', 'hashlib', 'heapq', 'http', 'http.client', 'json', 'json.decoder', 'json.encoder', 'json.scanner', 'locale', 'lzma', 'math', 'msvcrt', 'nturl2path', 'pathlib', 'pkgutil', 'platform', 'posixpath', 'queue', 'quopri', 'random', 'select', 'selectors', 'shlex', 'shutil', 'signal', 'socket', 'ssl', 'struct', 'subprocess', 'tempfile', 'textwrap', 'thonny.assistance', 'thonny.ast_utils', 'thonny.backend', 'thonny.base_file_browser', 'thonny.codeview', 'thonny.config', 'thonny.config_ui', 'thonny.editor_helpers', 'thonny.editors', 'thonny.languages', 'thonny.memory', 'thonny.misc_utils', 'thonny.plugins', 'thonny.plugins.about', 'thonny.plugins.assistant_config_page', 'thonny.plugins.ast_view', 'thonny.plugins.autocomplete', 'thonny.plugins.backend', 'thonny.plugins.backend_config_page', 'thonny.plugins.base_syntax_themes', 'thonny.plugins.base_ui_themes', 'thonny.plugins.birdseye_frontend', 'thonny.plugins.calltip', 'thonny.plugins.cells', 'thonny.plugins.circuitpython', 'thonny.plugins.circuitpython.cirpy_front', 'thonny.plugins.clean_ui_themes', 'thonny.plugins.coloring', 'thonny.plugins.commenting_indenting', 'thonny.plugins.common_editing_commands', 'thonny.plugins.cpython_backend', 'thonny.plugins.cpython_backend.cp_back', 'thonny.plugins.cpython_frontend', 'thonny.plugins.cpython_frontend.cp_front', 'thonny.plugins.cpython_ssh', 'thonny.plugins.cpython_ssh.cps_front', 'thonny.plugins.debugger', 'thonny.plugins.dock_user_windows_frontend', 'thonny.plugins.editor_config_page', 'thonny.plugins.esp', 'thonny.plugins.ev3', 'thonny.plugins.event_logging', 'thonny.plugins.event_view', 'thonny.plugins.files', 'thonny.plugins.find_replace', 'thonny.plugins.general_config_page', 'thonny.plugins.goto_definition', 'thonny.plugins.heap', 'thonny.plugins.help', 'thonny.plugins.highlight_names', 'thonny.plugins.locals_marker', 'thonny.plugins.microbit', 'thonny.plugins.micropython', 'thonny.plugins.micropython.base_flashing_dialog', 'thonny.plugins.micropython.esptool_dialog', 'thonny.plugins.micropython.mp_common', 'thonny.plugins.micropython.mp_front', 'thonny.plugins.micropython.uf2dialog', 'thonny.plugins.misc_analyzers', 'thonny.plugins.mypy', 'thonny.plugins.notes', 'thonny.plugins.object_inspector', 'thonny.plugins.outline', 'thonny.plugins.paren_matcher', 'thonny.plugins.pgzero_frontend', 'thonny.plugins.pi', 'thonny.plugins.pip_gui', 'thonny.plugins.prime_inventor', 'thonny.plugins.printing', 'thonny.plugins.pylint', 'thonny.plugins.pylint.messages', 'thonny.plugins.pythontutor', 'thonny.plugins.remove_old_data_dir', 'thonny.plugins.replayer', 'thonny.plugins.rp2040', 'thonny.plugins.rpi_pico', 'thonny.plugins.run_debug_config_page', 'thonny.plugins.shell_config_page', 'thonny.plugins.shell_macro', 'thonny.plugins.statement_boxes', 'thonny.plugins.stdlib_error_helpers', 'thonny.plugins.system_shell', 'thonny.plugins.terminal_config_page', 'thonny.plugins.theme_and_font_config_page', 'thonny.plugins.thonny_folders', 'thonny.plugins.todo_view', 'thonny.plugins.tomorrow_syntax_theme', 'thonny.plugins.variables', 'thonny.roughparse', 'thonny.rst_utils', 'thonny.running', 'thonny.shell', 'thonny.terminal', 'thonny.tktextext', 'thonny.token_utils', 'thonny.ui_utils', 'thonny.workbench', 'thonny.workdlg', 'tkinter', 'tkinter.commondialog', 'tkinter.constants', 'tkinter.dialog', 'tkinter.filedialog', 'tkinter.font', 'tkinter.messagebox', 'tkinter.simpledialog', 'tkinter.ttk', 'urllib', 'urllib.error', 'urllib.parse', 'urllib.request', 'urllib.response', 'uu', 'uuid', 'webbrowser', 'zlib']
18:05:13.281 [MainThread] INFO    thonny.running: Killing backend process
18:05:13.281 [MainThread] INFO    thonny.running: Starting the backend: ['C:\\Users\\Alexandria Myers\\Documents\\GitHub\\PyBrowse\\thonny\\python.exe', '-u', '-B', 'C:\\Users\\Alexandria Myers\\Documents\\GitHub\\PyBrowse\\thonny\\lib\\site-packages\\thonny\\plugins\\cpython_backend\\cp_launcher.py', 'C:\\Users\\Alexandria Myers', "{'run.warn_module_shadowing': True}"] C:\Users\Alexandria Myers
18:05:13.291 [Thread-2 (_listen_stdout)] INFO    thonny.running: Reader got EOF
18:05:13.320 [MainThread] INFO    thonny.running: Prepared clean state for executing ToplevelCommand(args=['-c'], args_str='-c $EDITOR_CONTENT', cmd_line='%Run -c $EDITOR_CONTENT', tty_mode=True, source='import sys\nfrom PyQt5.QtWidgets import QApplication, QMainWindow, QToolBar, QAction, QLineEdit\nfrom PyQt5.QtWebEngineWidgets import QWebEngineView\nfrom PyQt5.QtCore import QUrl\n\n\nclass Browser(QMainWindow):\n    def __init__(self):\n        super().__init__()\n        self.setWindowTitle("Python Web Browser")\n        self.setGeometry(100, 100, 1200, 800)\n\n        self.browser = QWebEngineView()\n        self.browser.setUrl(QUrl("https://www.google.com"))\n        self.setCentralWidget(self.browser)\n\n        self._create_navbar()\n\n    def _create_navbar(self):\n        navbar = QToolBar()\n        self.addToolBar(navbar)\n\n        back_btn = QAction(\'Back\', self)\n        back_btn.triggered.connect(self.browser.back)\n        navbar.addAction(back_btn)\n\n        forward_btn = QAction(\'Forward\', self)\n        forward_btn.triggered.connect(self.browser.forward)\n        navbar.addAction(forward_btn)\n\n        reload_btn = QAction(\'Reload\', self)\n        reload_btn.triggered.connect(self.browser.reload)\n        navbar.addAction(reload_btn)\n\n        home_btn = QAction(\'Home\', self)\n        home_btn.triggered.connect(self.navigate_home)\n        navbar.addAction(home_btn)\n\n        self.url_bar = QLineEdit()\n        self.url_bar.returnPressed.connect(self.navigate_to_url)\n        navbar.addWidget(self.url_bar)\n\n        self.browser.urlChanged.connect(self.update_url)\n\n    def navigate_home(self):\n        self.browser.setUrl(QUrl("https://www.google.com"))\n\n    def navigate_to_url(self):\n        url = self.url_bar.text()\n        if not url.startswith("http"):\n            url = "http://" + url\n        self.browser.setUrl(QUrl(url))\n\n    def update_url(self, q):\n        self.url_bar.setText(q.toString())\n\n\nif __name__ == \'__main__\':\n    app = QApplication(sys.argv)\n    QApplication.setApplicationName("Python Browser")\n    window = Browser()\n    window.show()\n    sys.exit(app.exec_())\n', name='Run', argv=[], id='cmd_3', local_cwd='C:\\Users\\Alexandria Myers')
18:05:13.321 [MainThread] INFO    thonny: TIME/MODS 0.041 After Run 
18:06:52.343 [Thread-4 (_listen_stdout)] INFO    thonny.running: Reader got EOF
18:06:52.369 [MainThread] INFO    thonny.shell: BaseShellText._on_backend_terminated
18:06:52.376 [MainThread] INFO    thonny.plugins.cpython_frontend.cp_front: Creating LocalCPythonProxy
18:06:52.377 [MainThread] INFO    thonny.running: Starting the backend: ['C:\\Users\\Alexandria Myers\\Documents\\GitHub\\PyBrowse\\thonny\\python.exe', '-u', '-B', 'C:\\Users\\Alexandria Myers\\Documents\\GitHub\\PyBrowse\\thonny\\lib\\site-packages\\thonny\\plugins\\cpython_backend\\cp_launcher.py', 'C:\\Users\\Alexandria Myers', "{'run.warn_module_shadowing': True}"] C:\Users\Alexandria Myers
18:06:52.412 [MainThread] INFO    thonny.shell: BaseShellText.restart(True)
18:06:57.289 [MainThread] INFO    thonny: TIME/MODS 103.968 Before Run 
18:06:57.293 [MainThread] INFO    thonny.running: Killing backend process
18:06:57.294 [MainThread] INFO    thonny.running: Starting the backend: ['C:\\Users\\Alexandria Myers\\Documents\\GitHub\\PyBrowse\\thonny\\python.exe', '-u', '-B', 'C:\\Users\\Alexandria Myers\\Documents\\GitHub\\PyBrowse\\thonny\\lib\\site-packages\\thonny\\plugins\\cpython_backend\\cp_launcher.py', 'C:\\Users\\Alexandria Myers', "{'run.warn_module_shadowing': True}"] C:\Users\Alexandria Myers
18:06:57.304 [Thread-6 (_listen_stdout)] INFO    thonny.running: Reader got EOF
18:06:57.330 [MainThread] INFO    thonny.running: Prepared clean state for executing ToplevelCommand(args=['-c'], args_str='-c $EDITOR_CONTENT', cmd_line='%Run -c $EDITOR_CONTENT', tty_mode=True, source='import sys\nfrom PyQt5.QtWidgets import (\n    QApplication, QMainWindow, QToolBar, QAction,\n    QLineEdit, QListWidget, QVBoxLayout, QWidget\n)\nfrom PyQt5.QtWebEngineWidgets import QWebEngineView\nfrom PyQt5.QtCore import QUrl\n\n\nclass Browser(QMainWindow):\n    def __init__(self):\n        super().__init__()\n        self.setWindowTitle("Python Web Browser")\n        self.setGeometry(100, 100, 1200, 800)\n\n        self.history = []  # In-memory history list\n\n        self.browser = QWebEngineView()\n        self.browser.setUrl(QUrl("https://www.google.com"))\n        self.setCentralWidget(self.browser)\n\n        self._create_navbar()\n\n        self.browser.urlChanged.connect(self.update_url)\n        self.browser.loadFinished.connect(self.add_to_history)\n\n    def _create_navbar(self):\n        navbar = QToolBar()\n        self.addToolBar(navbar)\n\n        back_btn = QAction(\'Back\', self)\n        back_btn.triggered.connect(self.browser.back)\n        navbar.addAction(back_btn)\n\n        forward_btn = QAction(\'Forward\', self)\n        forward_btn.triggered.connect(self.browser.forward)\n        navbar.addAction(forward_btn)\n\n        reload_btn = QAction(\'Reload\', self)\n        reload_btn.triggered.connect(self.browser.reload)\n        navbar.addAction(reload_btn)\n\n        home_btn = QAction(\'Home\', self)\n        home_btn.triggered.connect(self.navigate_home)\n        navbar.addAction(home_btn)\n\n        history_btn = QAction(\'History\', self)\n        history_btn.triggered.connect(self.show_history)\n        navbar.addAction(history_btn)\n\n        self.url_bar = QLineEdit()\n        self.url_bar.returnPressed.connect(self.navigate_to_url)\n        navbar.addWidget(self.url_bar)\n\n    def navigate_home(self):\n        self.browser.setUrl(QUrl("https://www.google.com"))\n\n    def navigate_to_url(self):\n        url = self.url_bar.text()\n        if not url.startswith("http"):\n            url = "http://" + url\n        self.browser.setUrl(QUrl(url))\n\n    def update_url(self, q):\n        self.url_bar.setText(q.toString())\n\n    def add_to_history(self):\n        url = self.browser.url().toString()\n        if url not in self.history:\n            self.history.append(url)\n\n    def show_history(self):\n        self.history_window = QWidget()\n        self.history_window.setWindowTitle("Browsing History")\n        self.history_window.setGeometry(150, 150, 600, 400)\n\n        layout = QVBoxLayout()\n        list_widget = QListWidget()\n        list_widget.addItems(self.history)\n        list_widget.itemClicked.connect(lambda item: self.load_history_url(item.text()))\n\n        layout.addWidget(list_widget)\n        self.history_window.setLayout(layout)\n        self.history_window.show()\n\n    def load_history_url(self, url):\n        self.browser.setUrl(QUrl(url))\n        self.history_window.close()\n\n\nif __name__ == \'__main__\':\n    app = QApplication(sys.argv)\n    QApplication.setApplicationName("Python Browser with History")\n    window = Browser()\n    window.show()\n    sys.exit(app.exec_())\n\n', name='Run', argv=[], id='cmd_7', local_cwd='C:\\Users\\Alexandria Myers')
18:06:57.331 [MainThread] INFO    thonny: TIME/MODS 0.042 After Run 
18:08:21.834 [Thread-8 (_listen_stdout)] INFO    thonny.running: Reader got EOF
18:08:21.851 [MainThread] INFO    thonny.shell: BaseShellText._on_backend_terminated
18:08:21.859 [MainThread] INFO    thonny.plugins.cpython_frontend.cp_front: Creating LocalCPythonProxy
18:08:21.859 [MainThread] INFO    thonny.running: Starting the backend: ['C:\\Users\\Alexandria Myers\\Documents\\GitHub\\PyBrowse\\thonny\\python.exe', '-u', '-B', 'C:\\Users\\Alexandria Myers\\Documents\\GitHub\\PyBrowse\\thonny\\lib\\site-packages\\thonny\\plugins\\cpython_backend\\cp_launcher.py', 'C:\\Users\\Alexandria Myers', "{'run.warn_module_shadowing': True}"] C:\Users\Alexandria Myers
18:08:21.895 [MainThread] INFO    thonny.shell: BaseShellText.restart(True)
18:08:26.436 [MainThread] INFO    thonny: TIME/MODS 89.105 Before Run 
18:08:26.438 [MainThread] INFO    thonny.running: Killing backend process
18:08:26.439 [MainThread] INFO    thonny.running: Starting the backend: ['C:\\Users\\Alexandria Myers\\Documents\\GitHub\\PyBrowse\\thonny\\python.exe', '-u', '-B', 'C:\\Users\\Alexandria Myers\\Documents\\GitHub\\PyBrowse\\thonny\\lib\\site-packages\\thonny\\plugins\\cpython_backend\\cp_launcher.py', 'C:\\Users\\Alexandria Myers', "{'run.warn_module_shadowing': True}"] C:\Users\Alexandria Myers
18:08:26.449 [Thread-10 (_listen_stdout)] INFO    thonny.running: Reader got EOF
18:08:26.475 [MainThread] INFO    thonny.running: Prepared clean state for executing ToplevelCommand(args=['-c'], args_str='-c $EDITOR_CONTENT', cmd_line='%Run -c $EDITOR_CONTENT', tty_mode=True, source='import sys\nfrom PyQt5.QtWidgets import (\n    QApplication, QMainWindow, QToolBar, QAction,\n    QLineEdit, QListWidget, QVBoxLayout, QWidget, QPushButton, QHBoxLayout\n)\nfrom PyQt5.QtWebEngineWidgets import QWebEngineView\nfrom PyQt5.QtCore import QUrl\n\n\nclass Browser(QMainWindow):\n    def __init__(self):\n        super().__init__()\n        self.setWindowTitle("Python Web Browser with History and Bookmarks")\n        self.setGeometry(100, 100, 1200, 800)\n\n        self.history = []    # Browsing history\n        self.bookmarks = []  # Bookmarked URLs\n\n        self.browser = QWebEngineView()\n        self.browser.setUrl(QUrl("https://www.google.com"))\n        self.setCentralWidget(self.browser)\n\n        self._create_navbar()\n        self._create_bookmarks_bar()\n\n        self.browser.urlChanged.connect(self.update_url)\n        self.browser.loadFinished.connect(self.add_to_history)\n\n    def _create_navbar(self):\n        navbar = QToolBar()\n        self.addToolBar(navbar)\n\n        back_btn = QAction(\'Back\', self)\n        back_btn.triggered.connect(self.browser.back)\n        navbar.addAction(back_btn)\n\n        forward_btn = QAction(\'Forward\', self)\n        forward_btn.triggered.connect(self.browser.forward)\n        navbar.addAction(forward_btn)\n\n        reload_btn = QAction(\'Reload\', self)\n        reload_btn.triggered.connect(self.browser.reload)\n        navbar.addAction(reload_btn)\n\n        home_btn = QAction(\'Home\', self)\n        home_btn.triggered.connect(self.navigate_home)\n        navbar.addAction(home_btn)\n\n        history_btn = QAction(\'History\', self)\n        history_btn.triggered.connect(self.show_history)\n        navbar.addAction(history_btn)\n\n        bookmark_btn = QAction(\'Bookmark\', self)\n        bookmark_btn.triggered.connect(self.add_bookmark)\n        navbar.addAction(bookmark_btn)\n\n        self.url_bar = QLineEdit()\n        self.url_bar.returnPressed.connect(self.navigate_to_url)\n        navbar.addWidget(self.url_bar)\n\n    def _create_bookmarks_bar(self):\n        self.bookmark_toolbar = QToolBar("Bookmarks")\n        self.addToolBar(self.bookmark_toolbar)\n\n    def update_bookmarks_bar(self):\n        self.bookmark_toolbar.clear()\n        for url in self.bookmarks:\n            btn = QPushButton(url)\n            btn.clicked.connect(lambda checked, u=url: self.browser.setUrl(QUrl(u)))\n            self.bookmark_toolbar.addWidget(btn)\n\n    def navigate_home(self):\n        self.browser.setUrl(QUrl("https://www.google.com"))\n\n    def navigate_to_url(self):\n        url = self.url_bar.text()\n        if not url.startswith("http"):\n            url = "http://" + url\n        self.browser.setUrl(QUrl(url))\n\n    def update_url(self, q):\n        self.url_bar.setText(q.toString())\n\n    def add_to_history(self):\n        url = self.browser.url().toString()\n        if url not in self.history:\n            self.history.append(url)\n\n    def show_history(self):\n        self.history_window = QWidget()\n        self.history_window.setWindowTitle("Browsing History")\n        self.history_window.setGeometry(150, 150, 600, 400)\n\n        layout = QVBoxLayout()\n        list_widget = QListWidget()\n        list_widget.addItems(self.history)\n        list_widget.itemClicked.connect(lambda item: self.load_history_url(item.text()))\n\n        layout.addWidget(list_widget)\n        self.history_window.setLayout(layout)\n        self.history_window.show()\n\n    def load_history_url(self, url):\n        self.browser.setUrl(QUrl(url))\n        self.history_window.close()\n\n    def add_bookmark(self):\n        url = self.browser.url().toString()\n        if url not in self.bookmarks:\n            self.bookmarks.append(url)\n            self.update_bookmarks_bar()\n\n\nif __name__ == \'__main__\':\n    app = QApplication(sys.argv)\n    QApplication.setApplicationName("Python Browser with Bookmarks")\n    window = Browser()\n    window.show()\n    sys.exit(app.exec_())\n\n', name='Run', argv=[], id='cmd_11', local_cwd='C:\\Users\\Alexandria Myers')
18:08:26.484 [MainThread] INFO    thonny: TIME/MODS 0.048 After Run 
18:11:29.930 [MainThread] INFO    thonny: TIME/MODS 183.446 Before Run 
18:11:29.930 [MainThread] INFO    thonny.running: Trying to execute current but runner is 'running'
18:11:30.942 [MainThread] INFO    thonny.running: Killing backend process
18:11:30.943 [MainThread] INFO    thonny.shell: BaseShellText._on_backend_terminated
18:11:30.957 [MainThread] INFO    thonny.plugins.cpython_frontend.cp_front: Creating LocalCPythonProxy
18:11:30.957 [MainThread] INFO    thonny.running: Starting the backend: ['C:\\Users\\Alexandria Myers\\Documents\\GitHub\\PyBrowse\\thonny\\python.exe', '-u', '-B', 'C:\\Users\\Alexandria Myers\\Documents\\GitHub\\PyBrowse\\thonny\\lib\\site-packages\\thonny\\plugins\\cpython_backend\\cp_launcher.py', 'C:\\Users\\Alexandria Myers', "{'run.warn_module_shadowing': True}"] C:\Users\Alexandria Myers
18:11:30.986 [Thread-12 (_listen_stdout)] INFO    thonny.running: Reader got EOF
18:11:31.042 [MainThread] INFO    thonny.shell: BaseShellText.restart(False)
18:11:31.097 [MainThread] INFO    thonny.running: Killing backend process
18:11:31.097 [MainThread] INFO    thonny.running: Starting the backend: ['C:\\Users\\Alexandria Myers\\Documents\\GitHub\\PyBrowse\\thonny\\python.exe', '-u', '-B', 'C:\\Users\\Alexandria Myers\\Documents\\GitHub\\PyBrowse\\thonny\\lib\\site-packages\\thonny\\plugins\\cpython_backend\\cp_launcher.py', 'C:\\Users\\Alexandria Myers', "{'run.warn_module_shadowing': True}"] C:\Users\Alexandria Myers
18:11:31.098 [Thread-14 (_listen_stdout)] INFO    thonny.running: Reader got EOF
18:11:31.136 [MainThread] INFO    thonny.running: Prepared clean state for executing ToplevelCommand(args=['-c'], args_str='-c $EDITOR_CONTENT', cmd_line='%Run -c $EDITOR_CONTENT', tty_mode=True, source='import sys\nfrom PyQt5.QtWidgets import (\n    QApplication, QMainWindow, QToolBar, QAction,\n    QLineEdit, QListWidget, QVBoxLayout, QWidget, QPushButton,\n    QHBoxLayout, QListWidgetItem, QMessageBox\n)\nfrom PyQt5.QtWebEngineWidgets import QWebEngineView\nfrom PyQt5.QtCore import QUrl\n\n\nclass Browser(QMainWindow):\n    def __init__(self):\n        super().__init__()\n        self.setWindowTitle("Python Web Browser with Bookmarks")\n        self.setGeometry(100, 100, 1200, 800)\n\n        self.history = []    # Browsing history\n        self.bookmarks = []  # Bookmarked URLs\n\n        self.browser = QWebEngineView()\n        self.browser.setUrl(QUrl("https://www.google.com"))\n        self.setCentralWidget(self.browser)\n\n        self._create_navbar()\n        self._create_bookmarks_bar()\n\n        self.browser.urlChanged.connect(self.update_url)\n        self.browser.loadFinished.connect(self.add_to_history)\n\n    def _create_navbar(self):\n        navbar = QToolBar()\n        self.addToolBar(navbar)\n\n        back_btn = QAction(\'Back\', self)\n        back_btn.triggered.connect(self.browser.back)\n        navbar.addAction(back_btn)\n\n        forward_btn = QAction(\'Forward\', self)\n        forward_btn.triggered.connect(self.browser.forward)\n        navbar.addAction(forward_btn)\n\n        reload_btn = QAction(\'Reload\', self)\n        reload_btn.triggered.connect(self.browser.reload)\n        navbar.addAction(reload_btn)\n\n        home_btn = QAction(\'Home\', self)\n        home_btn.triggered.connect(self.navigate_home)\n        navbar.addAction(home_btn)\n\n        history_btn = QAction(\'History\', self)\n        history_btn.triggered.connect(self.show_history)\n        navbar.addAction(history_btn)\n\n        bookmark_btn = QAction(\'Bookmark\', self)\n        bookmark_btn.triggered.connect(self.add_bookmark)\n        navbar.addAction(bookmark_btn)\n\n        manage_bookmarks_btn = QAction(\'Manage Bookmarks\', self)\n        manage_bookmarks_btn.triggered.connect(self.manage_bookmarks)\n        navbar.addAction(manage_bookmarks_btn)\n\n        self.url_bar = QLineEdit()\n        self.url_bar.returnPressed.connect(self.navigate_to_url)\n        navbar.addWidget(self.url_bar)\n\n    def _create_bookmarks_bar(self):\n        self.bookmark_toolbar = QToolBar("Bookmarks")\n        self.addToolBar(self.bookmark_toolbar)\n\n    def update_bookmarks_bar(self):\n        self.bookmark_toolbar.clear()\n        for url in self.bookmarks:\n            btn = QPushButton(url)\n            btn.clicked.connect(lambda checked, u=url: self.browser.setUrl(QUrl(u)))\n            self.bookmark_toolbar.addWidget(btn)\n\n    def navigate_home(self):\n        self.browser.setUrl(QUrl("https://www.google.com"))\n\n    def navigate_to_url(self):\n        url = self.url_bar.text()\n        if not url.startswith("http"):\n            url = "http://" + url\n        self.browser.setUrl(QUrl(url))\n\n    def update_url(self, q):\n        self.url_bar.setText(q.toString())\n\n    def add_to_history(self):\n        url = self.browser.url().toString()\n        if url not in self.history:\n            self.history.append(url)\n\n    def show_history(self):\n        self.history_window = QWidget()\n        self.history_window.setWindowTitle("Browsing History")\n        self.history_window.setGeometry(150, 150, 600, 400)\n\n        layout = QVBoxLayout()\n        list_widget = QListWidget()\n        list_widget.addItems(self.history)\n        list_widget.itemClicked.connect(lambda item: self.load_history_url(item.text()))\n\n        layout.addWidget(list_widget)\n        self.history_window.setLayout(layout)\n        self.history_window.show()\n\n    def load_history_url(self, url):\n        self.browser.setUrl(QUrl(url))\n        self.history_window.close()\n\n    def add_bookmark(self):\n        url = self.browser.url().toString()\n        if url not in self.bookmarks:\n            self.bookmarks.append(url)\n            self.update_bookmarks_bar()\n\n    def manage_bookmarks(self):\n        self.bookmark_window = QWidget()\n        self.bookmark_window.setWindowTitle("Manage Bookmarks")\n        self.bookmark_window.setGeometry(200, 200, 500, 400)\n\n        layout = QVBoxLayout()\n\n        self.bookmark_list_widget = QListWidget()\n        self.bookmark_list_widget.addItems(self.bookmarks)\n        layout.addWidget(self.bookmark_list_widget)\n\n        delete_btn = QPushButton("Delete Selected Bookmark")\n        delete_btn.clicked.connect(self.delete_selected_bookmark)\n        layout.addWidget(delete_btn)\n\n        self.bookmark_window.setLayout(layout)\n        self.bookmark_window.show()\n\n    def delete_selected_bookmark(self):\n        selected_items = self.bookmark_list_widget.selectedItems()\n        if not selected_items:\n            QMessageBox.information(self, "No Selection", "Please select a bookmark to delete.")\n            return\n\n        for item in selected_items:\n            url = item.text()\n            if url in self.bookmarks:\n                self.bookmarks.remove(url)\n\n        self.bookmark_list_widget.clear()\n        self.bookmark_list_widget.addItems(self.bookmarks)\n        self.update_bookmarks_bar()\n\n\nif __name__ == \'__main__\':\n    app = QApplication(sys.argv)\n    QApplication.setApplicationName("Python Browser with Bookmarks")\n    window = Browser()\n    window.show()\n    sys.exit(app.exec_())\n\n', name='Run', argv=[], id='cmd_12', local_cwd='C:\\Users\\Alexandria Myers')
18:11:31.145 [MainThread] INFO    thonny: TIME/MODS 1.215 After Run 
18:12:31.720 [Thread-16 (_listen_stdout)] INFO    thonny.running: Reader got EOF
18:12:31.734 [MainThread] INFO    thonny.shell: BaseShellText._on_backend_terminated
18:12:31.742 [MainThread] INFO    thonny.plugins.cpython_frontend.cp_front: Creating LocalCPythonProxy
18:12:31.742 [MainThread] INFO    thonny.running: Starting the backend: ['C:\\Users\\Alexandria Myers\\Documents\\GitHub\\PyBrowse\\thonny\\python.exe', '-u', '-B', 'C:\\Users\\Alexandria Myers\\Documents\\GitHub\\PyBrowse\\thonny\\lib\\site-packages\\thonny\\plugins\\cpython_backend\\cp_launcher.py', 'C:\\Users\\Alexandria Myers', "{'run.warn_module_shadowing': True}"] C:\Users\Alexandria Myers
18:12:31.786 [MainThread] INFO    thonny.shell: BaseShellText.restart(True)
18:12:44.677 [MainThread] INFO    thonny.ui_utils: Restoring focus to .
18:12:44.677 [MainThread] INFO    thonny.editors: Save dialog returned 'C:/Users/Alexandria Myers/Documents/PyBrowse1' with typevariable 'Python files'
18:13:24.973 [MainThread] INFO    thonny: TIME/MODS 113.828 Before Run (+1 modules)
18:13:24.973 [MainThread] INFO    thonny: NEW MODS ['thonny.plugins.cpython_frontend.cp_pip_gui']
18:13:24.980 [MainThread] INFO    thonny: TIME/MODS 0.006 After Run 
18:13:24.985 [MainThread] INFO    thonny.running: Killing backend process
18:13:24.985 [MainThread] INFO    thonny.running: Starting the backend: ['C:\\Users\\Alexandria Myers\\Documents\\GitHub\\PyBrowse\\thonny\\python.exe', '-u', '-B', 'C:\\Users\\Alexandria Myers\\Documents\\GitHub\\PyBrowse\\thonny\\lib\\site-packages\\thonny\\plugins\\cpython_backend\\cp_launcher.py', 'C:\\Users\\Alexandria Myers\\Documents', "{'run.warn_module_shadowing': True}"] C:\Users\Alexandria Myers\Documents
18:13:24.998 [Thread-18 (_listen_stdout)] INFO    thonny.running: Reader got EOF
18:13:25.027 [MainThread] INFO    thonny.running: Prepared clean state for executing ToplevelCommand(args=['PyBrowse1.py'], args_str='PyBrowse1.py', cmd_line='%Run PyBrowse1.py', tty_mode=True, source=None, name='Run', argv=[], id='cmd_18', local_cwd='C:\\Users\\Alexandria Myers\\Documents')
18:13:39.481 [MainThread] INFO    thonny: TIME/MODS 14.501 Before Run (+41 modules)
18:13:39.481 [MainThread] INFO    thonny: NEW MODS ['argparse', 'docutils', 'docutils.core', 'docutils.frontend', 'docutils.io', 'docutils.languages', 'docutils.languages.en', 'docutils.nodes', 'docutils.parsers', 'docutils.parsers.rst', 'docutils.parsers.rst.directives', 'docutils.parsers.rst.directives.admonitions', 'docutils.parsers.rst.directives.body', 'docutils.parsers.rst.directives.misc', 'docutils.parsers.rst.languages', 'docutils.parsers.rst.languages.en', 'docutils.parsers.rst.roles', 'docutils.parsers.rst.states', 'docutils.parsers.rst.tableparser', 'docutils.readers', 'docutils.readers.doctree', 'docutils.readers.standalone', 'docutils.statemachine', 'docutils.transforms', 'docutils.transforms.frontmatter', 'docutils.transforms.misc', 'docutils.transforms.references', 'docutils.transforms.universal', 'docutils.utils', 'docutils.utils.code_analyzer', 'docutils.utils.punctuation_chars', 'docutils.utils.roman', 'docutils.utils.smartquotes', 'docutils.utils.urischemes', 'docutils.writers', 'docutils.writers.null', 'mypy', 'mypy.version', 'optparse', 'pprint', 'unicodedata']
18:13:39.486 [MainThread] INFO    thonny.running: Killing backend process
18:13:39.487 [MainThread] INFO    thonny.running: Starting the backend: ['C:\\Users\\Alexandria Myers\\Documents\\GitHub\\PyBrowse\\thonny\\python.exe', '-u', '-B', 'C:\\Users\\Alexandria Myers\\Documents\\GitHub\\PyBrowse\\thonny\\lib\\site-packages\\thonny\\plugins\\cpython_backend\\cp_launcher.py', 'C:\\Users\\Alexandria Myers\\Documents', "{'run.warn_module_shadowing': True}"] C:\Users\Alexandria Myers\Documents
18:13:39.500 [Thread-20 (_listen_stdout)] INFO    thonny.running: Reader got EOF
18:13:39.528 [MainThread] INFO    thonny.running: Prepared clean state for executing ToplevelCommand(args=['PyBrowse1.py'], args_str='PyBrowse1.py', cmd_line='%Run PyBrowse1.py', tty_mode=True, source=None, name='Run', argv=[], id='cmd_22', local_cwd='C:\\Users\\Alexandria Myers\\Documents')
18:13:39.528 [MainThread] INFO    thonny: TIME/MODS 0.048 After Run 
18:13:39.875 [MainThread] INFO    thonny.plugins.cpython_frontend.cp_front: Starting GUI update loop
18:53:06.500 [MainThread] INFO    thonny: TIME/MODS 2366.972 Before Run 
18:53:06.506 [MainThread] INFO    thonny.running: Killing backend process
18:53:06.507 [MainThread] INFO    thonny.running: Starting the backend: ['C:\\Users\\Alexandria Myers\\Documents\\GitHub\\PyBrowse\\thonny\\python.exe', '-u', '-B', 'C:\\Users\\Alexandria Myers\\Documents\\GitHub\\PyBrowse\\thonny\\lib\\site-packages\\thonny\\plugins\\cpython_backend\\cp_launcher.py', 'C:\\Users\\Alexandria Myers\\Documents', "{'run.warn_module_shadowing': True}"] C:\Users\Alexandria Myers\Documents
18:53:06.525 [Thread-26 (_listen_stdout)] INFO    thonny.running: Reader got EOF
18:53:06.550 [MainThread] INFO    thonny.running: Prepared clean state for executing ToplevelCommand(args=['PyBrowse1.py'], args_str='PyBrowse1.py', cmd_line='%Run PyBrowse1.py', tty_mode=True, source=None, name='Run', argv=[], id='cmd_26', local_cwd='C:\\Users\\Alexandria Myers\\Documents')
18:53:06.551 [MainThread] INFO    thonny: TIME/MODS 0.051 After Run 
18:55:51.155 [MainThread] INFO    thonny: TIME/MODS 164.604 Before Run 
18:55:51.159 [MainThread] INFO    thonny.running: Killing backend process
18:55:51.160 [MainThread] INFO    thonny.running: Starting the backend: ['C:\\Users\\Alexandria Myers\\Documents\\GitHub\\PyBrowse\\thonny\\python.exe', '-u', '-B', 'C:\\Users\\Alexandria Myers\\Documents\\GitHub\\PyBrowse\\thonny\\lib\\site-packages\\thonny\\plugins\\cpython_backend\\cp_launcher.py', 'C:\\Users\\Alexandria Myers\\Documents', "{'run.warn_module_shadowing': True}"] C:\Users\Alexandria Myers\Documents
18:55:51.169 [Thread-32 (_listen_stdout)] INFO    thonny.running: Reader got EOF
18:55:51.202 [MainThread] INFO    thonny.running: Prepared clean state for executing ToplevelCommand(args=['PyBrowse1.py'], args_str='PyBrowse1.py', cmd_line='%Run PyBrowse1.py', tty_mode=True, source=None, name='Run', argv=[], id='cmd_34', local_cwd='C:\\Users\\Alexandria Myers\\Documents')
18:55:51.203 [MainThread] INFO    thonny: TIME/MODS 0.047 After Run 
18:55:55.251 [MainThread] INFO    thonny: TIME/MODS 4.048 Before Run 
18:55:55.253 [MainThread] INFO    thonny.running: Killing backend process
18:55:55.254 [MainThread] INFO    thonny.running: Starting the backend: ['C:\\Users\\Alexandria Myers\\Documents\\GitHub\\PyBrowse\\thonny\\python.exe', '-u', '-B', 'C:\\Users\\Alexandria Myers\\Documents\\GitHub\\PyBrowse\\thonny\\lib\\site-packages\\thonny\\plugins\\cpython_backend\\cp_launcher.py', 'C:\\Users\\Alexandria Myers\\Documents', "{'run.warn_module_shadowing': True}"] C:\Users\Alexandria Myers\Documents
18:55:55.255 [Thread-38 (_listen_stdout)] INFO    thonny.running: Reader got EOF
18:55:55.295 [MainThread] INFO    thonny.running: Prepared clean state for executing ToplevelCommand(args=['PyBrowse1.py'], args_str='PyBrowse1.py', cmd_line='%Run PyBrowse1.py', tty_mode=True, source=None, name='Run', argv=[], id='cmd_35', local_cwd='C:\\Users\\Alexandria Myers\\Documents')
18:55:55.296 [MainThread] INFO    thonny: TIME/MODS 0.045 After Run 
18:58:23.294 [MainThread] INFO    thonny: TIME/MODS 147.998 Before Run 
18:58:23.299 [MainThread] INFO    thonny.running: Killing backend process
18:58:23.299 [MainThread] INFO    thonny.running: Starting the backend: ['C:\\Users\\Alexandria Myers\\Documents\\GitHub\\PyBrowse\\thonny\\python.exe', '-u', '-B', 'C:\\Users\\Alexandria Myers\\Documents\\GitHub\\PyBrowse\\thonny\\lib\\site-packages\\thonny\\plugins\\cpython_backend\\cp_launcher.py', 'C:\\Users\\Alexandria Myers\\Documents', "{'run.warn_module_shadowing': True}"] C:\Users\Alexandria Myers\Documents
18:58:23.308 [Thread-44 (_listen_stdout)] INFO    thonny.running: Reader got EOF
18:58:23.341 [MainThread] INFO    thonny.running: Prepared clean state for executing ToplevelCommand(args=['PyBrowse1.py'], args_str='PyBrowse1.py', cmd_line='%Run PyBrowse1.py', tty_mode=True, source=None, name='Run', argv=[], id='cmd_39', local_cwd='C:\\Users\\Alexandria Myers\\Documents')
18:58:23.342 [MainThread] INFO    thonny: TIME/MODS 0.048 After Run 
18:58:29.388 [Thread-50 (_listen_stdout)] INFO    thonny.running: Reader got EOF
18:58:29.405 [MainThread] INFO    thonny.shell: BaseShellText._on_backend_terminated
18:58:29.412 [MainThread] INFO    thonny.plugins.cpython_frontend.cp_front: Creating LocalCPythonProxy
18:58:29.412 [MainThread] INFO    thonny.running: Starting the backend: ['C:\\Users\\Alexandria Myers\\Documents\\GitHub\\PyBrowse\\thonny\\python.exe', '-u', '-B', 'C:\\Users\\Alexandria Myers\\Documents\\GitHub\\PyBrowse\\thonny\\lib\\site-packages\\thonny\\plugins\\cpython_backend\\cp_launcher.py', 'C:\\Users\\Alexandria Myers\\Documents', "{'run.warn_module_shadowing': True}"] C:\Users\Alexandria Myers\Documents
18:58:29.456 [MainThread] INFO    thonny.shell: BaseShellText.restart(True)
18:58:33.636 [MainThread] INFO    thonny: TIME/MODS 10.294 Before Run 
18:58:33.638 [MainThread] INFO    thonny.running: Killing backend process
18:58:33.639 [MainThread] INFO    thonny.running: Starting the backend: ['C:\\Users\\Alexandria Myers\\Documents\\GitHub\\PyBrowse\\thonny\\python.exe', '-u', '-B', 'C:\\Users\\Alexandria Myers\\Documents\\GitHub\\PyBrowse\\thonny\\lib\\site-packages\\thonny\\plugins\\cpython_backend\\cp_launcher.py', 'C:\\Users\\Alexandria Myers\\Documents', "{'run.warn_module_shadowing': True}"] C:\Users\Alexandria Myers\Documents
18:58:33.640 [Thread-52 (_listen_stdout)] INFO    thonny.running: Reader got EOF
18:58:33.682 [MainThread] INFO    thonny.running: Prepared clean state for executing ToplevelCommand(args=['PyBrowse1.py'], args_str='PyBrowse1.py', cmd_line='%Run PyBrowse1.py', tty_mode=True, source=None, name='Run', argv=[], id='cmd_40', local_cwd='C:\\Users\\Alexandria Myers\\Documents')
18:58:33.683 [MainThread] INFO    thonny: TIME/MODS 0.047 After Run 
18:58:41.879 [Thread-54 (_listen_stdout)] INFO    thonny.running: Reader got EOF
18:58:41.906 [MainThread] INFO    thonny.shell: BaseShellText._on_backend_terminated
18:58:41.912 [MainThread] INFO    thonny.plugins.cpython_frontend.cp_front: Creating LocalCPythonProxy
18:58:41.913 [MainThread] INFO    thonny.running: Starting the backend: ['C:\\Users\\Alexandria Myers\\Documents\\GitHub\\PyBrowse\\thonny\\python.exe', '-u', '-B', 'C:\\Users\\Alexandria Myers\\Documents\\GitHub\\PyBrowse\\thonny\\lib\\site-packages\\thonny\\plugins\\cpython_backend\\cp_launcher.py', 'C:\\Users\\Alexandria Myers\\Documents', "{'run.warn_module_shadowing': True}"] C:\Users\Alexandria Myers\Documents
18:58:41.957 [MainThread] INFO    thonny.shell: BaseShellText.restart(True)
19:01:27.955 [MainThread] INFO    thonny: TIME/MODS 174.272 Before Run 
19:01:27.961 [MainThread] INFO    thonny.running: Killing backend process
19:01:27.961 [MainThread] INFO    thonny.running: Starting the backend: ['C:\\Users\\Alexandria Myers\\Documents\\GitHub\\PyBrowse\\thonny\\python.exe', '-u', '-B', 'C:\\Users\\Alexandria Myers\\Documents\\GitHub\\PyBrowse\\thonny\\lib\\site-packages\\thonny\\plugins\\cpython_backend\\cp_launcher.py', 'C:\\Users\\Alexandria Myers\\Documents', "{'run.warn_module_shadowing': True}"] C:\Users\Alexandria Myers\Documents
19:01:27.969 [Thread-56 (_listen_stdout)] INFO    thonny.running: Reader got EOF
19:01:28.001 [MainThread] INFO    thonny.running: Prepared clean state for executing ToplevelCommand(args=['PyBrowse1.py'], args_str='PyBrowse1.py', cmd_line='%Run PyBrowse1.py', tty_mode=True, source=None, name='Run', argv=[], id='cmd_44', local_cwd='C:\\Users\\Alexandria Myers\\Documents')
19:01:28.002 [MainThread] INFO    thonny: TIME/MODS 0.048 After Run 
19:01:35.977 [Thread-58 (_listen_stdout)] INFO    thonny.running: Reader got EOF
19:01:36.013 [MainThread] INFO    thonny.shell: BaseShellText._on_backend_terminated
19:01:36.020 [MainThread] INFO    thonny.plugins.cpython_frontend.cp_front: Creating LocalCPythonProxy
19:01:36.020 [MainThread] INFO    thonny.running: Starting the backend: ['C:\\Users\\Alexandria Myers\\Documents\\GitHub\\PyBrowse\\thonny\\python.exe', '-u', '-B', 'C:\\Users\\Alexandria Myers\\Documents\\GitHub\\PyBrowse\\thonny\\lib\\site-packages\\thonny\\plugins\\cpython_backend\\cp_launcher.py', 'C:\\Users\\Alexandria Myers\\Documents', "{'run.warn_module_shadowing': True}"] C:\Users\Alexandria Myers\Documents
19:01:36.063 [MainThread] INFO    thonny.shell: BaseShellText.restart(True)
